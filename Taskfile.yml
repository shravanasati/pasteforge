# https://taskfile.dev

version: '3'

dotenv: ["./backend/.env"]

tasks:
  assets:
    desc: Run the vite build command.
    sources:
      - src/**
      - public/**
      - package.json
      - pnpm-lock.yaml
      - tsconfig*
      # - **.config.**
    cmds:
      - pnpm build

  build:
    desc: Build the go server.
    dir: "./backend"
    cmds:
      - go build -o server

  run:
    desc: Run the go server.
    dir: "./backend"
    cmds:
      - ./server

  loc:
    desc: Count the lines of code.
    cmds:
      - tokei -e "*.json" -e "*.yaml" -e "*.yml" -e "*.md" -e "*.txt"

  env:
    desc: Prints out the env variables required by the backend server to run.
    silent: true
    cmds:
      - echo GIN_MODE=debug
      - echo PORT=3122
      - echo DIST_DIR="../dist"
      - echo SECRET_KEY="$(python -c 'import secrets;print(secrets.token_urlsafe())')"
      - echo POSTGRES_USER="postgres"
      - echo POSTGRES_PASSWORD="verysecretpassword"
      - echo POSTGRES_DB="pasteforge"

  up:
    dir: "./backend"
    desc: Run docker compose up.
    cmds:
      - docker compose up

  down:
    dir: "./backend"
    desc: Run docker compose down.
    cmds:
      - docker compose down 

  postgres:
    dir: "./backend"
    desc: Run postgres container using docker compose.
    cmds:
      - docker compose up -d postgres

  psql:
    desc: Connect to the postgres container using psql.
    cmds:
      - psql -h localhost -p 5432 -U postgres -d pasteforge

  dockerfile:
    desc: Build the docker image from backend/Dockerfile.
    cmds:
      - docker build -t shravanasati/pasteforge -f ./backend/Dockerfile .

  docker-run:
    desc: Run the pasteforge docker image.
    cmds:
      - docker run -p 8080:8080 shravanasati/pasteforge

  sqlc:
    desc: Run sqlc generation.
    dir: "./backend"
    cmds:
      - sqlc generate

  migrate-up:
    desc: Migrate UP database using tern.
    dir: "./backend"
    cmds:
      - tern migrate -m ./migrations -c  ./migrations/tern.conf

  migrate-down:
    desc: Migrate DOWN database using tern.
    dir: "./backend"
    cmds:
      - tern migrate -d -1 -m ./migrations -c  ./migrations/tern.conf

  migrate-new:
    desc: Create a new migration. Must prepend `--` before migration name.
    dir: './backend'
    cmds:
      - tern new -m migrations {{ .CLI_ARGS }}